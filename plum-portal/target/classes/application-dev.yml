# 开发环境
server:
  port: 8080

spring:
  datasource:  #数据源相关的配置节点
    username: root
    password: hc2919
    url: jdbc:mysql://localhost:3306/db_chatter?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&useSSL=false
    driver-class-name: com.mysql.jdbc.Driver #mysql / MariaDB 驱动
    #    第一种数据源 Hikari   === 开始
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      connection-timeout: 30000   #等待连接池分配连接的最大时长（毫秒）,超过这个时长还没可用的连接则发生SQLException,默认30秒
      minimum-idle: 5       #最小连接数
      maximum-pool-size: 20   #最大连接数
      auto-commit: true       #自动提交
      idle-timeout: 6000000   #连接超时的最大时长（毫秒），超时则被释放（retired）,默认：10分钟
      pool-name: DateSourceHikariCP #连接池名字
      max-lifetime: 1800000         #连接的生命时长（毫秒）超时而且没被使用则被释放（retired）,默认：30分钟 1800000ms
      connection-test-query: SELECT 1
     #    第一种数据源 Hikari   === 结束

  #    #第二种数据源 druid    === 开始
#    type: com.alibaba.druid.pool.DruidDataSource
#    #数据源其他配置
#    druid:
#      # 连接池配置
#      # 配置初始化大小、最小、最大
#      initial-size: 1
#      min-idle: 1
#      max-active: 20
#      # 配置获取连接等待超时的时间
#      time-between-connect-error-millis: 60000
#      min-evictable-idle-time-millis: 300000
#      validation-query: SELECT 1 FROM DUAL
#      test-while-idle: true
#      test-on-borrow: false
#      test-on-return: false
#      pool-prepared-statements: true
#      #配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
#      filter: stat,wall,log4j
#      max-pool-prepared-statement-per-connection-size: 20
#      use-global-data-source-stat: true
#      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
  #    #第二种数据源 druid    === 结束
  redis:
    database: 0
    host: 127.0.0.1
    port: 6379
    password: hc2919
    jedis:
      pool:
        max-active: 100
        max-idle: 3
        max-wait: -1
        min-idle: 0
    timeout: 1000
#mybatis 相关配置
mybatis:
  mapper-locations: classpath*:cn/peyton/plum/**/mapper/*.xml  #所有 mapper 映射的文件所在目录位置
  type-aliases-package: cn.peyton.plum.community.pojo    #所有数据库表逆向后所--映射的实体类 Entity/Bean/POJO
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl #开启 mybatis 的日志实现，可以在控制台打印输入 SQL 语句，开发环境配置

#通用 mapper 配置
#mapper:
#  mappers: cn.peyton.plum.core.mybatis.MyMapper   #所有 Mapper 都需要实现的接口
#  not-empty: false      #在进行数据库操作时候，判断一个属性是否为空时，是否需要自动追加不为空的判断
#  identity: MYSQL
#分页插件助手配置
pagehelper:
  support-methods-arguments: true
  helper-dialect: mysql
